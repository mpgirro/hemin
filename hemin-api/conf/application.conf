include "secure"

#play.modules.enabled += "Module" # otherwise the eager singletons will be ordinary lazy singletons
#play.modules.enabled += "play.modules.swagger.SwaggerModule"

# db connections = ((physical_core_count * 2) + effective_spindle_count)
fixedConnectionPool = 5

play.http.secret.key = "loremipsum" # CHANGE ME!
play.http.secret.key = ${?APPLICATION_SECRET}

# Swagger-Play assumes the default routes is in the root, so we explicitely define it here
#play.http.router = conf/routes

# enable CORS, see https://www.playframework.com/documentation/2.6.x/CorsFilter
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
    exposedHeaders = ["Access-Control-Allow-Origin"]
}

akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"

    # filter the log events using the back-end configuration (e.g. logback.xml) before they are published to the event bus.
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
}

# TODO obsolete and delete
repository.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

hemin {
    engine {
        # TODO custom engine config
    }
    api {
        search {
            dispatcher {
                executor = "thread-pool-executor"
                throughput = 1
                thread-pool-executor {
                    fixed-pool-size = ${fixedConnectionPool}
                }
            }
        }

        podcast {
            dispatcher {
                executor = "thread-pool-executor"
                throughput = 1
                thread-pool-executor {
                    fixed-pool-size = ${fixedConnectionPool}
                }
            }
        }

        episode {
            dispatcher {
                executor = "thread-pool-executor"
                throughput = 1
                thread-pool-executor {
                    fixed-pool-size = ${fixedConnectionPool}
                }
            }
        }

        feed {
            dispatcher {
                executor = "thread-pool-executor"
                throughput = 1
                thread-pool-executor {
                    fixed-pool-size = ${fixedConnectionPool}
                }
            }
        }

        image {
            dispatcher {
                executor = "thread-pool-executor"
                throughput = 1
                thread-pool-executor {
                    fixed-pool-size = ${fixedConnectionPool}
                }
            }
        }

        cli {
            dispatcher {
                executor = "thread-pool-executor"
                throughput = 1
                thread-pool-executor {
                    fixed-pool-size = 1 # TODO reicht das?
                }
            }
        }
    }
}


