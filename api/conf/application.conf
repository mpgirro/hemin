include "secure"

#play.modules.enabled += "Module" # otherwise the eager singletons will be ordinary lazy singletons
play.modules.enabled += "play.modules.swagger.SwaggerModule"

play.http.secret.key = "loremipsum" # CHANGE ME!
play.http.secret.key = ${?APPLICATION_SECRET}

# Swagger-Play assumes the default routes is in the root, so we explicitely define it here
#play.http.router = conf/routes

# enable CORS, see https://www.playframework.com/documentation/2.6.x/CorsFilter
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
    exposedHeaders = ["Access-Control-Allow-Origin"]
}


api.version = "beta"
swagger {
    #filter (String) - classname of swagger filter | default: empty
    api {
        host = "localhost:9000"
        basepath = "/api"
        info {
            title = "Hemin API"
            #contact : (String) - Contact Information | default : empty,
            description = "This the API to the backend data of Hemin. You can find out more about Hemin at [https://hemin.io](https://hemin.io)."
            termsOfService = "https://hemin.io/terms/"
            #license : (String) - Terms Of Service | default : empty,
            #licenseUrl : (String) - Terms Of Service | default : empty
        }
    }
}

# db connections = ((physical_core_count * 2) + effective_spindle_count)
fixedConnectionPool = 5

akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"

    # filter the log events using the back-end configuration (e.g. logback.xml) before they are published to the event bus.
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
}

# TODO obsolete and delete
repository.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

io {
    hemin {
        engine {
            # TODO custom engine config
            catalog.store-images = false
        }
        api {
            v1 {
                dispatcher {
                    executor = "thread-pool-executor"
                    throughput = 1
                    thread-pool-executor {
                        fixed-pool-size = ${fixedConnectionPool}
                    }
                }
            }
        }
    }
}




